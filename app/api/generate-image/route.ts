import { NextRequest, NextResponse } from 'next/server';
import { Runware } from '@runware/sdk-js';

const RUNWARE_API_KEY = process.env.RUNWARE_API_KEY || 'Bpu5CScHECsobs0n7gJwnGLacwWOnHZv';

interface GenerateImageRequest {
  verse: string;
  ageGroup: string;
  style?: string;
}

function createImagePrompt(verse: string, ageGroup: string): string {
  const ageSpecificStyles = {
    '0-6': 'cute, colorful, child-friendly, simple shapes, bright colors, gentle, safe, friendly characters, soft lighting, cartoon style',
    '7-12': 'adventure, exciting, vibrant, imaginative, fantasy elements, heroic, magical, engaging, dynamic composition',
    '13-17': 'modern, contemporary, relatable, stylish, urban, artistic, expressive, sophisticated, current trends',
    'adult': 'mature, thoughtful, artistic, professional, elegant, meaningful, symbolic, refined, contemplative'
  };

  const style = ageSpecificStyles[ageGroup.toLowerCase() as keyof typeof ageSpecificStyles] || ageSpecificStyles.adult;

  return `Create a beautiful, inspiring image representing the Bible verse: "${verse}". 
Style: ${style}
The image should be family-friendly, biblically appropriate, and visually appealing.
Make it warm, welcoming, and suitable for religious education.
Avoid any dark or scary elements.
Use warm, inviting colors and positive imagery.`;
}

export async function POST(request: NextRequest) {
  try {
    const { verse, ageGroup, style }: GenerateImageRequest = await request.json();

    if (!verse || !ageGroup) {
      return NextResponse.json(
        { error: 'Verse and ageGroup are required' },
        { status: 400 }
      );
    }

    const prompt = createImagePrompt(verse, ageGroup);

    // Initialize Runware SDK
    const runware = new Runware({
      apiKey: RUNWARE_API_KEY,
      shouldReconnect: true,
      globalMaxRetries: 3,
      timeoutDuration: 90000, // 90 seconds timeout
    });

    // Generate image using Runware SDK
    const images = await runware.requestImages({
      positivePrompt: prompt,
      model: 'runware:101@1',
      width: 1024,
      height: 1024,
      numberResults: 1,
      steps: 30,
    });

    if (!images || images.length === 0) {
      throw new Error('No image generated by Runware AI');
    }

    // Clean up connection
    await runware.disconnect();

    // Return the generated image data
    return NextResponse.json({
      success: true,
      image: images[0],
      prompt: prompt,
      model: 'runware:101@1',
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('Error generating image:', error);
    
    return NextResponse.json({
      success: false,
      error: 'Failed to generate image',
      details: error instanceof Error ? error.message : 'Unknown error',
      timestamp: new Date().toISOString()
    }, { status: 500 });
  }
}
